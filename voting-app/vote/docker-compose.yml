version: '3.8'

services:
  vote:
    build: ./vote
    command: python app.py
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./vote:/app
    ports:
      - "6060:80"
    networks:
      - front-tier
      - back-tier

  result:
    build: ./result
    entrypoint: nodemon server.js
    depends_on:
      db:
        condition: service_healthy 
    volumes:
      - ./result:/app
    ports:
      - "5001:80"
      - "5858:5858"
    networks:
      - front-tier
      - back-tier

  worker:
    build:
      context: ./worker
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    networks:
      - back-tier

  redis:
    image: redis:alpine
    volumes:
      - "/c/dev/voting-app/vote/healthchecks:/healthchecks"
    healthcheck:
      test: ["CMD-SHELL", "sh /healthchecks/redis.sh"]
      interval: 5s
      timeout: 10s
      retries: 3
    networks:
      - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: exampledb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "/c/dev/voting-app/vote/healthchecks:/healthchecks"
    healthcheck:
      test: ["CMD-SHELL", "sh /healthchecks/postgres.sh"]
      interval: 5s
      timeout: 10s
      retries: 3
    networks:
      - back-tier

  seed:
    build: ./seed-data
    profiles: ["seed"]
    depends_on:
      vote:
        condition: service_healthy 
    networks:
      - front-tier
    restart: "no"

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
